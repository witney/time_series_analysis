
% INPUTS
% ertf_condition_1 in format: freq x time x trial
% ertf_condition_2 in format: freq x time x trial


function ...
    [conddiff_ertf,...
    conddiff_zertf,...
    surrogate_conddiff_ertf_fit]=...
    make_conddiff_zertf_for_many_frequencies_and_two_conditions(...
    ertf_condition_1,...
    ertf_condition_2,...
    number_of_surrogate_runs);


% analytic_amplitudes=abs(analytic_amplitudes);  %makes positive (takes amplitude)
number_of_frequencies=...                      %rows of analytic amp are freq
    size(ertf_condition_1,1);
number_of_sample_points_in_signal=...
    size(ertf_condition_1,2);

number_of_epochs_for_condition_1=...
    size(ertf_condition_1,3);
number_of_epochs_for_condition_2=...
    size(ertf_condition_2,3);
total_number_of_epochs_for_both_conditions=...
    number_of_epochs_for_condition_1+...
    number_of_epochs_for_condition_2;

number_of_sample_points_in_epoch=number_of_sample_points_in_signal;

conddiff_ertf=zeros(...
    number_of_frequencies,...
    number_of_sample_points_in_epoch,'single');
conddiff_zertf=zeros(size(conddiff_ertf),'single');
surrogate_conddiff_ertf_fit=zeros(...
    number_of_frequencies,...
    number_of_sample_points_in_epoch,...
    2,'single');

epochs=cat(3,ertf_condition_1,ertf_condition_2);

conddiff_ertf=...       %subtracts mean of epochs for condition one from condition 2, across third dimension, which is epochs, so take means of both kinds of epochs and subtracts them
    mean(epochs(:,:,...
    1:number_of_epochs_for_condition_1),3)-...
    mean(epochs(:,:,...
    number_of_epochs_for_condition_1+...
    (1:number_of_epochs_for_condition_2)),3);

surrogate_conddiff_ertf=zeros(...
    number_of_frequencies,...
    number_of_sample_points_in_epoch,...
    number_of_surrogate_runs,...
    'single');

for s=1:number_of_surrogate_runs    %makes epoched surrogate runs for both conditions (swapping labels ~5000 times)
    surrogate_inds=randperm(...
        total_number_of_epochs_for_both_conditions);
    surrogate_conddiff_ertf(:,:,s)=...
        mean(epochs(:,:,...
        surrogate_inds(...
        1:number_of_epochs_for_condition_1)),3)-...
        mean(epochs(:,:,...
        surrogate_inds(...
        number_of_epochs_for_condition_1+...
        (1:number_of_epochs_for_condition_2))),3);
%    if mod(s,100)==0
%        disp(number_of_surrogate_runs-s)
%    end
end

surrogate_conddiff_ertf_fit(:,:,1)=... %find the average with swapped labels
    mean(surrogate_conddiff_ertf,3);
for f=1:number_of_frequencies
    surrogate_conddiff_ertf_fit(f,:,2)=...
    std(squeeze(surrogate_conddiff_ertf(f,:,:)),0,2); %find sd with swapped labels
end

conddiff_zertf=(conddiff_ertf-...
    squeeze(surrogate_conddiff_ertf_fit(:,:,1)))./... %subtract average with swapped labels, divide by sd
    squeeze(surrogate_conddiff_ertf_fit(:,:,2));

surrogate_conddiff_ertf_fit=squeeze(surrogate_conddiff_ertf_fit);
